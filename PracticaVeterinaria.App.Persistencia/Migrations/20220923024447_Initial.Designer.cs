// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticaVeterinaria.App.Persistencia;

#nullable disable

namespace PracticaVeterinaria.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220923024447_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PracticaVeterinaria.App.Dominio.HistoriaClinica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("fechaApertura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fechaCierre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("mascotaid")
                        .HasColumnType("int");

                    b.Property<string>("observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("mascotaid");

                    b.ToTable("historiasClinicas");
                });

            modelBuilder.Entity("PracticaVeterinaria.App.Dominio.Mascota", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<string>("especie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estadoSalud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("propietarioid")
                        .HasColumnType("int");

                    b.Property<string>("raza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("veterinarioid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("propietarioid");

                    b.HasIndex("veterinarioid");

                    b.ToTable("mascotas");
                });

            modelBuilder.Entity("PracticaVeterinaria.App.Dominio.Propietario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cedula")
                        .HasColumnType("int");

                    b.Property<string>("correoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("propietarios");
                });

            modelBuilder.Entity("PracticaVeterinaria.App.Dominio.Veterinario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("veterinarios");
                });

            modelBuilder.Entity("PracticaVeterinaria.App.Dominio.Visita", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("estadoAnimo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fechaIngreso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fechaSalida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("frecuenciaCardiaca")
                        .HasColumnType("float");

                    b.Property<double>("frecuenciaRespiratoria")
                        .HasColumnType("float");

                    b.Property<int?>("historiasClinicasid")
                        .HasColumnType("int");

                    b.Property<string>("medicamentos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("motivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("peso")
                        .HasColumnType("float");

                    b.Property<int?>("propietarioid")
                        .HasColumnType("int");

                    b.Property<string>("recomendaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("temperatura")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("historiasClinicasid");

                    b.HasIndex("propietarioid");

                    b.ToTable("visitas");
                });

            modelBuilder.Entity("PracticaVeterinaria.App.Dominio.HistoriaClinica", b =>
                {
                    b.HasOne("PracticaVeterinaria.App.Dominio.Mascota", "mascota")
                        .WithMany()
                        .HasForeignKey("mascotaid");

                    b.Navigation("mascota");
                });

            modelBuilder.Entity("PracticaVeterinaria.App.Dominio.Mascota", b =>
                {
                    b.HasOne("PracticaVeterinaria.App.Dominio.Propietario", "propietario")
                        .WithMany()
                        .HasForeignKey("propietarioid");

                    b.HasOne("PracticaVeterinaria.App.Dominio.Veterinario", "veterinario")
                        .WithMany()
                        .HasForeignKey("veterinarioid");

                    b.Navigation("propietario");

                    b.Navigation("veterinario");
                });

            modelBuilder.Entity("PracticaVeterinaria.App.Dominio.Visita", b =>
                {
                    b.HasOne("PracticaVeterinaria.App.Dominio.HistoriaClinica", "historiasClinicas")
                        .WithMany()
                        .HasForeignKey("historiasClinicasid");

                    b.HasOne("PracticaVeterinaria.App.Dominio.Propietario", "propietario")
                        .WithMany()
                        .HasForeignKey("propietarioid");

                    b.Navigation("historiasClinicas");

                    b.Navigation("propietario");
                });
#pragma warning restore 612, 618
        }
    }
}
